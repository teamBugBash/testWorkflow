# This is a basic workflow to help you get started with Actions

name: Deployment To Prod

# Controls when the action will run. 
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675
          
      - name: Echo deployment payload created at field
        run: |
          echo "Hello ${{ github.event.deployment.created_at }}!"
          echo `cat "$GITHUB_EVENT_PATH" | jq -c .`
          
      - name: set github event into a variable so that it can be passed to template engine
        id: local-event-generator
        run: |
          value=`cat "$GITHUB_EVENT_PATH" | jq -c .`
          echo '::set-output name=GITHUB_EVENT_LOCAL::'"$value"
      - name: Push Notification
        uses: ProtocolRedefined/Dynamic-Template-Engine@anuraag016/testhelpers
        with:
          repoName: anuraag016/TestTemplateEngine 
          branchName: master
          data: '{ "message" : ${{ steps.local-event-generator.outputs.GITHUB_EVENT_LOCAL }}, "run_id": ${{ github.run_id }} }'
          transformerInSameRepo: false
          templateType: HandleBars
          sourceType: Test
          ClientType: Slack
          customHelpers: '{ "ifEq": "(arg1, arg2) =>(arg1 === arg2) ? \"true\" : \"\"", "truncate": "(des)=>(des.length < 25) ? des : des.substring(0,25)+ \"...\"", "appendCommaWithTwoStrings": "(firstValue,secondValue)=> (firstValue.indexOf(`and `)>-1)? `${secondValue}, ${firstValue}` : `${secondValue} and ${firstValue}`", "setVar": "(varName, varValue, options)=>{options.data.root[varName] = varValue;\nreturn \"\";}"}'
